{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","searchingTitle","setSearchingTitle","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","sameFilm","setSameFilm","errorLoad","setErrorLoad","request","a","url","fetch","then","response","json","film","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","some","prev","arr","push","style","color","fontSize","App","data","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dbb4a3f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const API_URL = `https://www.omdbapi.com/?apikey=dfe9f484&t=`;\n  const [searchingTitle, setSearchingTitle] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [sameFilm, setSameFilm] = useState(false);\n  const [errorLoad, setErrorLoad] = useState(false);\n\n  const request = async() => {\n    const url = `${API_URL}${searchingTitle}`;\n    const film = await fetch(url).then(response => response.json());\n\n    if (film.Response === 'False') {\n      setErrorLoad(true);\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbId('');\n      setImdbUrl('');\n    } else {\n      setErrorLoad(false);\n      setTitle(film.Title);\n      setDescription(film.Plot);\n      if (film.Poster !== 'N/A') {\n        setImgUrl(film.Poster);\n      } else {\n        setImgUrl(`https://bytes.ua/wp-content/uploads/2017/08/no-image.png`);\n      }\n\n      setImdbId(film.imdbID);\n      setImdbUrl(`https://www.imdb.com/title/${film.imdbID}`);\n    }\n  };\n\n  const onAddMovie = () => {\n    if (movies.some(movie => movie.imdbId === imdbId)) {\n      setSameFilm(true);\n    } else {\n      addMovie((prev) => {\n        const arr = [...prev];\n\n        arr.push({\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        });\n\n        return arr;\n      });\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={searchingTitle}\n              onChange={(e) => {\n                setErrorLoad(false);\n                setSameFilm(false);\n                setSearchingTitle(e.target.value);\n              }}\n            />\n          </div>\n\n          {errorLoad && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={request}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {imdbId !== '' && (\n      <div className=\"container\">\n        <h2 className=\"title\">\n          Preview\n          {sameFilm && (\n          <span\n            style={{\n              color: 'red',\n              fontSize: '16px',\n            }}\n          >\n            <br />\n            (Has already been added)\n          </span>\n          )}\n        </h2>\n        <MovieCard\n          title={title}\n          description={description}\n          imgUrl={imgUrl}\n          imdbUrl={imdbUrl}\n          imdbId={imdbId}\n        />\n      </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n    imdbId: PropTypes.string.isRequired,\n  })).isRequired,\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}